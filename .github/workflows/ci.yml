name: PKKI ITERA - Deploy

on:
  push:
    branches: [ main, development ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Production Server
      if: github.ref == 'refs/heads/main'
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'ENDSSH'
          set -e
          
          echo "🚀 Starting deployment to production..."
          cd /home/partikelxyz/pkki.itera
          
          # Enable maintenance mode
          php artisan down --message="Deployment in progress..." --retry=60
          
          # Backup database before deployment
          echo "📦 Creating backup..."
          php artisan backup:run --only-db --quiet || echo "Backup failed, continuing..."
          
          # Pull latest changes from main branch
          echo "📥 Pulling latest changes..."
          git fetch origin
          git reset --hard origin/main
          
          # Install/update dependencies
          echo "📦 Installing dependencies..."
          composer install --no-dev --optimize-autoloader --no-interaction
          
          # Build frontend assets
          echo "🏗️ Building frontend assets..."
          npm ci --production
          npm run build
          
          # Update Laravel configuration
          echo "⚙️ Updating configuration..."
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan icons:cache
          
          # Run database migrations
          echo "🗄️ Running migrations..."
          php artisan migrate --force
          
          # Generate Filament permissions
          echo "🔐 Updating permissions..."
          php artisan shield:generate --all --quiet || echo "Shield generation failed, continuing..."
          
          # Clear caches
          echo "🧹 Clearing caches..."
          php artisan cache:clear
          php artisan queue:restart
          
          # Set proper permissions
          echo "🔒 Setting permissions..."
          chmod -R 755 storage bootstrap/cache public/build
          chown -R www-data:www-data storage bootstrap/cache public/build
          
          # Disable maintenance mode
          php artisan up
          
          echo "✅ Production deployment completed successfully!"
        ENDSSH

    - name: Deploy to Development Server
      if: github.ref == 'refs/heads/development'
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'ENDSSH'
          set -e
          
          echo "🚀 Starting deployment to development..."
          cd /home/partikelxyz/pkki.itera
          
          # For development, we can be less cautious
          echo "📥 Pulling latest changes from development..."
          git fetch origin
          git reset --hard origin/development
          
          # Install dependencies (including dev)
          echo "📦 Installing dependencies..."
          composer install --optimize-autoloader --no-interaction
          
          # Build assets
          echo "🏗️ Building assets..."
          npm ci
          npm run build
          
          # Update configuration
          echo "⚙️ Updating configuration..."
          php artisan config:clear
          php artisan cache:clear
          
          # Run migrations
          echo "🗄️ Running migrations..."
          php artisan migrate --force
          
          echo "✅ Development deployment completed!"
        ENDSSH

    - name: Verify deployment
      run: |
        echo "🔍 Verifying deployment..."
        sleep 10
        
        # Check if site is responding
        if curl -f -s https://hki.proyekai.com/admin/login > /dev/null; then
          echo "✅ Site is responding correctly"
        else
          echo "❌ Site verification failed"
          exit 1
        fi

    - name: Notify success
      if: success()
      run: |
        echo "🎉 Deployment completed successfully!"
        echo "🌐 Site: https://hki.proyekai.com"
        echo "🔧 Admin: https://hki.proyekai.com/admin"
        echo "📊 Branch: ${{ github.ref_name }}"
        echo "📝 Commit: ${{ github.sha }}"

    - name: Notify failure
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "Please check the logs and try again."

    - name: Install PHP dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Install Node dependencies
      run: npm i

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Configure database
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=pkki_itera_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Seed database
      run: php artisan db:seed --force

    - name: Generate Shield permissions
      run: php artisan shield:generate --all

    - name: Build assets
      run: npm run build

    - name: Run PHP code style check
      run: composer pint -- --test

    - name: Run PHPStan static analysis
      run: composer analyse

    - name: Run PHPUnit tests
      run: php artisan test --coverage --min=80

    - name: Run JavaScript tests
      run: npm run test

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run security audit
      run: composer audit

    - name: Check for known security vulnerabilities
      run: php artisan inspire # Replace with actual security scanner
